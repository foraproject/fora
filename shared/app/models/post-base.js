// Generated by CoffeeScript 1.6.3
(function() {
  var ForaDbModel, PostBase,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ForaDbModel = require('./foramodel').ForaDbModel;

  PostBase = (function(_super) {
    __extends(PostBase, _super);

    function PostBase() {
      return PostBase.__super__.constructor.apply(this, arguments);
    }

    PostBase.typeDefinition = function() {
      return {
        name: "post",
        collection: 'posts',
        discriminator: function*(obj) {
          var def;
          def = yield Post.getTypeUtils().getTypeDefinition(obj.type);
          if (def.ctor !== Post) {
            throw new Error("Post type definitions must have ctor set to Post");
          }
          return def;
        },
        initialize: function*(obj) {
          return yield obj.initialize();
        },
        schema: {
          type: 'object',
          properties: {
            type: {
              type: 'string'
            },
            forumId: {
              type: 'string'
            },
            forum: {
              $ref: 'forum-summary'
            },
            createdById: {
              type: 'string'
            },
            createdBy: {
              $ref: 'user-summary'
            },
            meta: {
              type: 'array',
              items: {
                type: 'string'
              }
            },
            tags: {
              type: 'array',
              items: {
                type: 'string'
              }
            },
            stub: {
              type: 'string'
            },
            recommendations: {
              type: 'array',
              items: {
                $ref: 'user-summary'
              }
            },
            state: {
              type: 'string',
              "enum": ['draft', 'published']
            },
            savedAt: {
              type: 'integer'
            }
          },
          required: ['type', 'forumId', 'forum', 'createdById', 'createdBy', 'meta', 'tags', 'stub', 'recommendations', 'state', 'savedAt']
        },
        indexes: [
          {
            'state': 1,
            'forum.stub': 1
          }, {
            'state': 1,
            'forumId': 1
          }, {
            'state': 1,
            'createdAt': 1,
            'forum.stub': 1
          }, {
            'createdById': 1
          }, {
            'createdBy.username': 1
          }
        ],
        links: {
          forum: {
            type: 'forum',
            key: 'forumId'
          }
        },
        autoGenerated: {
          createdAt: {
            event: 'created'
          },
          updatedAt: {
            event: 'updated'
          }
        },
        trackChanges: true,
        logging: {
          onInsert: 'NEW_POST'
        }
      };
    };

    return PostBase;

  })(ForaDbModel);

  module.exports = PostBase;

}).call(this);
