(function() {
	"use strict";

	var services = require('fora-app-services'),
		DbConnector = require('fora-app-db-connector');

	var AppStats = require('./app-stats').AppStats;
	var AppSummary = require('./app-summary').AppSummary;

	var extendApp = function(App) {
		App.typeDefinition = {
			name: 'app',
			collection: 'apps',
			discriminator: function*(obj, typesService) {
				return yield* typesService.getTypeDefinition(obj.type);
			},
			schema: {
				type: 'object',
				properties: {
					type: { type: 'string' },
					appType: { type: 'string' },
					version: { type: 'string' },
					versionMajor: { type: 'number' },
					versionMinor: { type: 'number' },
					versionRevision: { type: 'number' },
					name: { type: 'string' },
					description: { type: 'string' },
					stub: { type: 'string' },
					access: {
						type: 'string',
						"enum": ['public', 'protected', 'private']
					},
					createdBy: { $ref: 'user-summary' },
					cover: { $ref: 'cover' },
					theme: { type: 'string' },
					stats: { $ref: 'app-stats' }
				},
				required: ['type', 'appType', 'version', 'versionMajor', 'versionMinor', 'versionRevision',
					'name', 'description', 'stub', 'access', 'createdBy', 'stats']
			},
			indexes: [ { 'createdBy.id': 1 }, { 'stub': 1 }	],
			autoGenerated: {
				createdAt: { event: 'created' },
				updatedAt: { event: 'updated' }
			},
			links: {
				records: { type: 'record', field: 'appId' },
				info: { Type: 'app-info', field: 'appId' }
			},
			logging: {
				onInsert: 'NEW_APP'
			}
		};


		App.prototype.summarize = function() {
			return new AppSummary(
				{
					id: DbConnector.getRowId(this),
					name: this.name,
					stub: this.stub,
					createdBy: this.createdBy
				}
			);
		};


		App.extend = function(items) {
			var ctor = function(params) {
				App.call(this, params);
			};

			ctor.prototype = Object.create(App.prototype);
			ctor.prototype.constructor = ctor;

			for (var key in items) {
				ctor.prototype[key] = items[key];
			}

			return ctor;
		};
	};

	module.exports = {
		extendApp: extendApp
	};

})();
